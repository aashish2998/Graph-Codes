class Solution {
public:
    
    bool dfs(vector<vector<int>>& grid, int sr,int sc,int row,int col)
    {
        if(sr<0 ||sr>=row ||sc<0 ||sc>=col)
        {
              return false;
            
        }
          
        
        if(grid[sr][sc]==1){
            return true;
        }
        
        grid[sr][sc]= 1;
        
        if(  dfs(grid,sr-1,sc,row,col) && dfs(grid,sr+1,sc,row,col) &&  dfs(grid,sr,sc-1,row,col) && dfs(grid,sr,sc+1,row,col))
        {
            return true;
        }

      
        
        grid[sr][sc]=0;
        return false;
        
    }
    int closedIsland(vector<vector<int>>& grid) {
        
        int row = grid.size();
        int col = grid[0].size();
        
        int count =0;
        
        for( int i=0;i<row;i++)
        {
            for( int j=0;j<col ;j++)
            {
                if(grid[i][j]==0 && dfs(grid,i,j,row,col))
                {
                        count++;
                }
               
            }
        }
        
        return count;
    }
};
