class Solution {
public:
    
    
    void dfs( vector<vector<int>>& grid1, vector<vector<int>>& grid2, int i, int j,int row, int col , int &flag)
    {
        if(i<0 || j<0 ||i>=row || j>=col||grid2[i][j]==0)
            return;
        
        if(grid1[i][j]==0)flag =0;
        grid2[i][j]=0;
        
        dfs(grid1,grid2,i-1,j,row,col,flag);
         dfs(grid1,grid2,i+1,j,row,col,flag);
         dfs(grid1,grid2,i,j-1,row,col,flag);
         dfs(grid1,grid2,i,j+1,row,col,flag);
    }
    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {
        
        int row = grid1.size();
        int col = grid1[0].size();
        
        int ans =0;
        for( int i=0;i<row;i++)
        {
            for( int j=0;j<col ;j++)
            {
                if(grid2[i][j]==1)
                {
                    int flag =1;
                    dfs(grid1,grid2,i,j,row,col,flag);
                    ans +=flag;
                }
            }
        }
        return ans;
    }
};
