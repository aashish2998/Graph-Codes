class Solution {
public:
    void dfs(vector<vector<int>>& graph, vector<vector<int>>&result, vector<int>&curpath, int node){
        curpath.push_back(node);
        if(node == graph.size()-1)
            result.push_back(curpath);
        else
            for(auto v: graph[node])
                dfs(graph,result,curpath,v);
        
        curpath.pop_back();
    }
    
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        vector<vector<int>>result;
        vector<int>curpath;
        dfs(graph,result,curpath,0);
        return result;
        
    }
};
